{
  "stats": {
    "suites": 4,
    "tests": 9,
<<<<<<< HEAD
    "passes": 8,
    "pending": 0,
    "failures": 1,
    "start": "2024-06-29T12:43:36.209Z",
    "end": "2024-06-29T12:43:36.961Z",
    "duration": 752
=======
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-27T18:00:23.028Z",
    "end": "2024-06-27T18:00:23.694Z",
    "duration": 666
>>>>>>> refs/remotes/origin/master
  },
  "tests": [
    {
      "title": "gives customers a free sample if the ride is less than or equal to 400 feet",
      "fullTitle": "index.js scuberGreetingForFeet() gives customers a free sample if the ride is less than or equal to 400 feet",
<<<<<<< HEAD
      "duration": 2,
=======
      "duration": 1,
>>>>>>> refs/remotes/origin/master
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 20 dollars for a distance between 400 and 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 20 dollars for a distance between 400 and 2000 feet",
<<<<<<< HEAD
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected 'No can do.' to equal 'That will be twenty bucks.'",
        "showDiff": true,
        "actual": "No can do.",
        "expected": "That will be twenty bucks.",
        "stack": "AssertionError: expected 'No can do.' to equal 'That will be twenty bucks.'\n    at Context.<anonymous> (test/indexTest.js:10:46)\n    at process.processImmediate (node:internal/timers:476:21)"
      }
=======
      "duration": 0,
      "currentRetry": 0,
      "err": {}
>>>>>>> refs/remotes/origin/master
    },
    {
      "title": "charges 30 dollars for a distance over 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 30 dollars for a distance over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js scuberGreetingForFeet() does not allow rides over 2500 feet",
<<<<<<< HEAD
      "duration": 1,
=======
      "duration": 0,
>>>>>>> refs/remotes/origin/master
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Ok, sounds good.\" when the city is NYC",
      "fullTitle": "index.js ternaryCheckCity() returns \"Ok, sounds good.\" when the city is NYC",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"No go.\" if the destination city is not NYC",
      "fullTitle": "index.js ternaryCheckCity() should return \"No go.\" if the destination city is not NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Thank you so much.\" if the tip is generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you so much.\" if the tip is generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Thank you.\" if the tip is not as generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you.\" if the tip is not as generous",
<<<<<<< HEAD
      "duration": 1,
=======
      "duration": 0,
>>>>>>> refs/remotes/origin/master
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Bye.\" if anything else",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Bye.\" if anything else",
<<<<<<< HEAD
      "duration": 0,
=======
      "duration": 1,
>>>>>>> refs/remotes/origin/master
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
<<<<<<< HEAD
  "failures": [
    {
      "title": "charges 20 dollars for a distance between 400 and 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 20 dollars for a distance between 400 and 2000 feet",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected 'No can do.' to equal 'That will be twenty bucks.'",
        "showDiff": true,
        "actual": "No can do.",
        "expected": "That will be twenty bucks.",
        "stack": "AssertionError: expected 'No can do.' to equal 'That will be twenty bucks.'\n    at Context.<anonymous> (test/indexTest.js:10:46)\n    at process.processImmediate (node:internal/timers:476:21)"
      }
    }
  ],
=======
  "failures": [],
>>>>>>> refs/remotes/origin/master
  "passes": [
    {
      "title": "gives customers a free sample if the ride is less than or equal to 400 feet",
      "fullTitle": "index.js scuberGreetingForFeet() gives customers a free sample if the ride is less than or equal to 400 feet",
<<<<<<< HEAD
      "duration": 2,
=======
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 20 dollars for a distance between 400 and 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 20 dollars for a distance between 400 and 2000 feet",
      "duration": 0,
>>>>>>> refs/remotes/origin/master
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "charges 30 dollars for a distance over 2000 feet",
      "fullTitle": "index.js scuberGreetingForFeet() charges 30 dollars for a distance over 2000 feet",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not allow rides over 2500 feet",
      "fullTitle": "index.js scuberGreetingForFeet() does not allow rides over 2500 feet",
<<<<<<< HEAD
      "duration": 1,
=======
      "duration": 0,
>>>>>>> refs/remotes/origin/master
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns \"Ok, sounds good.\" when the city is NYC",
      "fullTitle": "index.js ternaryCheckCity() returns \"Ok, sounds good.\" when the city is NYC",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"No go.\" if the destination city is not NYC",
      "fullTitle": "index.js ternaryCheckCity() should return \"No go.\" if the destination city is not NYC",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Thank you so much.\" if the tip is generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you so much.\" if the tip is generous",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Thank you.\" if the tip is not as generous",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Thank you.\" if the tip is not as generous",
<<<<<<< HEAD
      "duration": 1,
=======
      "duration": 0,
>>>>>>> refs/remotes/origin/master
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "should return \"Bye.\" if anything else",
      "fullTitle": "index.js switchOnCharmFromTip() should return \"Bye.\" if anything else",
<<<<<<< HEAD
      "duration": 0,
=======
      "duration": 1,
>>>>>>> refs/remotes/origin/master
      "currentRetry": 0,
      "err": {}
    }
  ]
}